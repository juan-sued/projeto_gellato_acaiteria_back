// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id              Int      @id @default(autoincrement())
  name            String   @db.VarChar(255)
  email           String   @unique @db.VarChar(100)
  phone           String?  @db.VarChar(12)
  cpf             String?  @unique @db.VarChar(11)
  password        String   @db.Text()
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  isAdministrator Boolean  @default(false) @db.Boolean()

  favoriteds favoriteds[]
  feedbacks  feedbacks[]
  orders     orders[]
  addresses  addresses[]
  customizedProducts customizedProducts[]

}


model addresses {
  id              Int      @id @default(autoincrement())
  userId          Int      @db.Integer
  cep             String   @db.VarChar(255)
  street          String   @db.VarChar(255)
  city            String   @db.VarChar(255)
  state           String   @db.VarChar(255)
  number          String   @db.VarChar(255)
  neighborhood    String   @db.VarChar(255)
  addressesDetail String?  @db.VarChar(255)
  user            users    @relation(fields: [userId], references: [id])
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model feedbacks {
  id        Int     @id @default(autoincrement())
  userId    Int     @db.SmallInt()
  feedbacks String? @db.Text()
  stars     String  @db.VarChar(3)

  user users @relation(fields: [userId], references: [id])
}



model categories {
  id          Int        @id @default(autoincrement())
  categories  String     @unique @db.VarChar(50)
  description String     @unique @db.VarChar(100)
  product     products[]
}

model favoriteds {
  id        Int      @id @default(autoincrement())
  userId    Int      @db.SmallInt()
  productId Int      @db.SmallInt()
  user      users    @relation(fields: [userId], references: [id])
  product   products @relation(fields: [productId], references: [id])
}

model orders {
  id          Int       @id @default(autoincrement())
  userId      Int       @db.SmallInt()
  productId   Int       @db.SmallInt()
  createdAt   DateTime  @default(now())
  isDelivered DateTime? @db.Timestamp()
  user        users     @relation(fields: [userId], references: [id])
  product     products  @relation(fields: [productId], references: [id])
}



model products {
  id               Int     @id @default(autoincrement())
  title            String  @unique @db.VarChar(150)
  image            String  @db.VarChar(100)
  price            Decimal @db.Decimal()
  description      String  @db.VarChar(70)
  categoryId       Int     @db.SmallInt()
  unitOfMeasure    String  @db.VarChar(20)
  amount           Int     @db.Integer()
  quantityForUnity Decimal @db.Decimal()

  favoriteds favoriteds[]
  categories categories   @relation(fields: [categoryId], references: [id])
  orders     orders[]
  ofertsDay  ofertsDay[]

  customizedProducts customizedProducts_products[]
}

model ofertsDay {
  id          Int      @id @default(autoincrement())
  productId   Int      @db.SmallInt()
  description String   @unique @db.VarChar(100)
  priceOfert  Decimal  @db.Decimal()
  product     products @relation(fields: [productId], references: [id])
}

model customizedProducts_products {
  id                  Int                @id @default(autoincrement())
  productCustomizedId Int
  productId           Int
  productCustomized   customizedProducts @relation(fields: [productCustomizedId], references: [id])
  product             products           @relation(fields: [productId], references: [id])
}

model customizedProducts {
  id        Int                           @id @default(autoincrement())
  name      String
  image     String
  price     Float
  cupsizeId  Int
  authorId Int 
  products  customizedProducts_products[]
  author users @relation(fields: [authorId], references: [id])
}
