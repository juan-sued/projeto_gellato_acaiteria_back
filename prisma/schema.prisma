// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//=====================  users =====================//
model users {
  id       Int     @id @default(autoincrement())
  name     String  @db.VarChar(150)
  email    String  @unique @db.VarChar(100)
  phone    String? @db.VarChar(12)
  cpf      String? @unique @db.VarChar(11)
  password String  @db.Text()

  adresses   adresses[]
  favoriteds favoriteds[]
  feedbacks  feedbacks[]
  orders     orders[]
}

model feedbacks {
  id       Int    @id @default(autoincrement())
  userId   Int    @db.SmallInt()
  feedback String @db.Text()
  starts   String @db.VarChar(3)

  user users @relation(fields: [userId], references: [id])
}

//=====================  products =====================//

model products {
  id          Int          @id @default(autoincrement())
  title       String       @unique @db.VarChar(150)
  image       String       @db.VarChar(100)
  price       Int          @db.SmallInt()
  description String       @db.VarChar(70)
  categoryId  Int          @db.SmallInt()
  favoriteds  favoriteds[]
  category    categories   @relation(fields: [categoryId], references: [id])
  orders      orders[]
  stock       stock[]
  historic    historic[]
}

model categories {
  id       Int        @id @default(autoincrement())
  category String     @unique @db.VarChar(100)
  products products[]
}

model favoriteds {
  id        Int      @id @default(autoincrement())
  userId    Int      @db.SmallInt()
  productId Int      @db.SmallInt()
  user      users    @relation(fields: [userId], references: [id])
  product   products @relation(fields: [productId], references: [id])
}

model orders {
  id          Int      @id @default(autoincrement())
  userId      Int      @db.SmallInt()
  productId   Int      @db.SmallInt()
  createdAt   DateTime @db.Timestamp()
  isDelivered DateTime @db.Date()
  user        users    @relation(fields: [userId], references: [id])
  product     products @relation(fields: [productId], references: [id])
}

//=====================  adresses =====================//
model adresses {
  id              Int           @id @default(autoincrement())
  userId          Int           @db.SmallInt()
  street          String        @db.VarChar(100)
  number          Int           @db.SmallInt()
  complement      String        @db.Text()
  typeCepId       Int           @db.SmallInt()
  neighborhoodsId Int           @db.SmallInt()
  cep             String        @db.VarChar(8)
  neighborhood    neighborhoods @relation(fields: [neighborhoodsId], references: [id])
  user            users         @relation(fields: [userId], references: [id])
  typeCep         typesCep      @relation(fields: [typeCepId], references: [id])
}

model typesCep {
  id       Int        @id @default(autoincrement())
  name     String     @unique @db.VarChar(150)
  adresses adresses[]
}

model neighborhoods {
  id       Int        @id @default(autoincrement())
  name     String     @unique @db.VarChar(150)
  city     cities     @relation(fields: [cityId], references: [id])
  cityId   Int        @db.SmallInt()
  adresses adresses[]
}

model cities {
  id            Int             @id @default(autoincrement())
  name          String          @unique @db.VarChar(120)
  uf            String          @unique @db.VarChar(3)
  neighborhoods neighborhoods[]
}

//=====================  administrator =====================//

model stock {
  id          Int      @id @default(autoincrement())
  productId   Int      @db.SmallInt()
  availables  Int      @db.SmallInt()
  isDelivered DateTime @db.Date()
  notes       String   @db.Text()
  product     products @relation(fields: [productId], references: [id])
}

model historic {
  id           Int      @id @default(autoincrement())
  productId    Int      @db.SmallInt()
  salesCounter Int      @db.Integer()
  dataSold     DateTime @db.Date()
  notes        String   @db.Text()
  productValue Int      @db.SmallInt()
  product      products @relation(fields: [productId], references: [id])
}
